services:
  backend:
    build:
      context: ./backend
    ports:
      - "8080:8080"
    restart: always
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /backend
    depends_on:
      - db
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    env_file:
      - postgres.env
    secrets:
      - postgres_password

  db:
    image: postgres
    restart: always
    shm_size: 128mb
    volumes:
      - db_volume:/data/postgres
    environment:
      PGDATA: /data/postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    env_file:
      - postgres.env
    secrets:
      - postgres_password

  frontend:
    depends_on:
      - backend
    build:
      context: ./client
    ports: 
      - "8000:8000"
    restart: always
    develop:
      watch:
        - action: sync
          path: ./client
          target: /client




volumes:
  db_volume:

secrets:
   postgres_password:
     file: db_password.txt
